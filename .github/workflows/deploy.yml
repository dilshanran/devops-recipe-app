name: Deploy

on:
  push:
    branches:
      - main
      - prod
jobs:
  test-lint:
    uses: ./.github/workflows/test-and-lint.yml # This is the action we are using to run the test and lint
    name: Test and Lint
    secrets: 
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  
  deploy: # we need to AWS CLI to login ECR and push the image its install ubuntu image
    name: Deploy
    runs-on: ubuntu-22.04
    needs: [test-lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # This is the action we are using to checkout the code
      - name: Set vars
        run: |
         if [[ $GITHUB_REF == 'refs/heads/prod' ]]; then
           echo "prod" > .workspace
         else
           echo "staging" > .workspace
         fi
      - name: Push to ECR # this run for push the image to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          docker build --compress -t ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA .
          docker push ${{ vars.ECR_REPO_APP }}:$GITHUB_SHA
          docker build --compress -t ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA proxy/
          docker push ${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA

      - name: Terraform Apply # this run for apply the terraform
        env: # we need to pass the secret and vars to the terraform
          AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }} # we need to pass the secret and vars to the terraform
          TF_VAR_DJANGO_SECRET_KEY: ${{ secrets.TF_VAR_DJANGO_SECRET_KEY }} # we need to pass the secret and vars to the terraform
        run: |
          export TF_VAR_ecr_app_image="${{ vars.ECR_REPO_APP }}:$GITHUB_SHA"
          export TF_VAR_ecr_proxy_image="${{ vars.ECR_REPO_PROXY }}:$GITHUB_SHA"
          workspace=$(cat .workspace) 
          cd infra/        
          docker compose run --rm terraform -chdir=deploy/ init
          docker compose run --rm terraform -chdir=deploy/ workspace select -or-create $workspace
          docker compose run --rm terraform -chdir=deploy/ apply -auto-approve
